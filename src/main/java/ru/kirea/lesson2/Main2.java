package ru.kirea.lesson2;
/*
Задание 2.1
На основе программного кода из домашнего задания №1 реализуйте массив на основе существующих примитивных или ссылочных типов данных.
Выполните обращение к массиву и базовые операции класса Arrays.
Оценить выполненные методы с помощью базового класса System.nanoTime().
Задание 2.2
На основе написанного кода в задании 2.1 реализуйте линейный и двоичный поиск.
Оценить алгоритмы линейного и двоичного поиска с помощью базового класса System.nanoTime(), при необходимости расширьте уже существующий массив данных.
Задание 2.3

Создайте массив размером 400 элементов.
Выполните сортировку с помощью метода sort().
Оцените сортировку с помощью базового класса System.nanoTime().
Задание 2.4
На основе существующего массива данных из задания 2.3 реализуйте алгоритм сортировки пузырьком.
Оцените сортировку с помощью базового класса System.nanoTime().
Сравните время выполнения алгоритмы сортировки методом sort() из задания 2.1 и сортировку пузырьком.
Задание 2.5
На основе массива данных из задания 2.3 реализуйте алгоритм сортировки методом выбора.
Оцените сортировку с помощью базового класса System.nanoTime().
Сравните с временем выполнения алгоритмов сортировки из прошлых заданий 2.3 и 2.4.
Задание 2.6
На основе массива данных из задания 2.3 реализуйте алгоритм сортировки методом вставки.
Оцените сортировку с помощью базового класса System.nanoTime().
Сравните с временем выполнения алгоритмов сортировки из прошлых заданий 2.3, 2.4 и 2.5.
*/

import java.util.Arrays;
import java.util.Random;

public class Main2 {
    public static void main(String[] args) {
        System.out.println("Задание 2.1");
        int[] arr = ArrHelper.task_2_1();

        System.out.println("Задание 2.2");
        ArrHelper.task_2_2(arr, new Random().nextInt(50));

        System.out.println("Задание 2.3 - сортировка sort");
        int[] arr3 = ArrHelper.generateRandomArr(400, 100);
        ArrHelper.task_2_3(arr3);

        System.out.println("Задание 2.4 - пузырьковая сортировка");
        int[] arr4 = ArrHelper.generateRandomArr(400, 100);
        ArrHelper.task_2_4(arr4);

        System.out.println("Задание 2.5 - сортировка выбором");
        int[] arr5 = ArrHelper.generateRandomArr(400, 100);
        ArrHelper.task_2_5(arr5);

        System.out.println("Задание 2.6 - сортировка вставкой");
        int[] arr6 = ArrHelper.generateRandomArr(400, 100);
        ArrHelper.task_2_6(arr6);
    }



}
